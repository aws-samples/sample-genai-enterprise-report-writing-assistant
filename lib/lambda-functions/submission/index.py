"""
This script contains the logic of the Lambda Function
"""

import os
from datetime import datetime
from connections import Connections
from botocore.exceptions import ClientError


def insert_submission(name, text, role, category, customer):
    """
    Insert submission text into the corresponding DynamoDB table.
    
    Inputs:
        name: str, user's name
        text: str, text generated by LLM using user's input
        role: str, user's role for writing, it's either 'associate' or 'manager'.
        category: str, document type: achievement|challenge
        customer: str, the customer name related to the submission.
    """
    # Create a DynamoDB service resource.
    dynamodb = Connections.ddb_resource

    # Select the table.
    table = dynamodb.Table(Connections.submission_from_associate_table_name)

    # Current timestamp in ISO format, e.g., 2023-01-26T19:05:15.123456
    submission_ts = datetime.now().isoformat()

    try:
        # Insert the data into the table.
        response = table.put_item(
            Item={
                'name': name,
                'text': text,
                'role': role,
                'category': category,
                'customer': customer,
                'submission_ts': submission_ts
            }
        )
        # Check for a successful response.
        if response['ResponseMetadata']['HTTPStatusCode'] == 200:
            return {'status': 'success', 'message': 'Your is submitted successfully.'}
        else:
            return {'status': 'error', 'message': 'Your submission Failed.', 'details': response}

    except ClientError as e:
        # Handle the exception if the operation fails.
        return {'status': 'error', 'message': str(e)}
